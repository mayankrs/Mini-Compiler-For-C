Rules useless in parser due to conflicts

   78 $@12: %empty


State 5 conflicts: 1 shift/reduce
State 25 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce
State 124 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: INCLUDE start
    2      | INCLUDE stmtlist

    3 type: INT
    4     | CHAR
    5     | VOID

    6 stmt: whileloop
    7     | forloop
    8     | ifstmt
    9     | funcdef
   10     | funccall ';'
   11     | assignment ';'
   12     | declaration ';'
   13     | ';'
   14     | expr ';'
   15     | RETURN ';'
   16     | RETURN expr ';'

   17 expr: expr OR expr
   18     | expr AND expr
   19     | expr BOR expr
   20     | expr BAND expr
   21     | expr NE expr
   22     | expr EQ expr
   23     | expr GE expr
   24     | expr LE expr
   25     | expr LT expr
   26     | expr GT expr
   27     | expr PLUS expr
   28     | expr MINUS expr
   29     | expr MULT expr
   30     | expr DIV expr
   31     | INC expr
   32     | expr INC
   33     | DEC expr
   34     | expr DEC
   35     | MINUS expr
   36     | '(' expr ')'
   37     | ID
   38     | NUM
   39     | funccall
   40     | STRING

   41 expr1: expr
   42      | assignment
   43      | %empty

   44 $@1: %empty

   45 assignment: ID $@1 E expr

   46 $@2: %empty

   47 assignment: ID $@2 MEQ expr

   48 $@3: %empty

   49 assignment: ID $@3 PEQ expr

   50 $@4: %empty

   51 assignment: ID $@4 MUEQ expr

   52 $@5: %empty

   53 assignment: ID $@5 DEQ expr

   54 declaration: type ID
   55            | type assignment

   56 $@6: %empty

   57 stmtblock: '{' $@6 stmtlist '}'

   58 stmtlist: stmt stmtlist
   59         | stmt

   60 arguement: ID
   61          | BAND ID
   62          | NUM
   63          | STRING

   64 $@7: %empty

   65 arguement: ID $@7 ',' arguement

   66 $@8: %empty

   67 arguement: BAND ID $@8 ',' arguement

   68 $@9: %empty

   69 arguement: NUM $@9 ',' arguement

   70 $@10: %empty

   71 arguement: STRING $@10 ',' arguement

   72 parameter: type ID

   73 $@11: %empty

   74 paramlist: parameter $@11 ',' paramlist
   75          | parameter
   76          | %empty

   77 funccall: ID '(' ')'

   78 $@12: %empty

   79 funccall: ID $@12 '(' arguement ')'

   80 $@13: %empty

   81 funcdef: type ID $@13 '(' paramlist ')' stmtblock

   82 whileloop: WHILE '(' expr ')' stmt
   83          | WHILE '(' expr ')' stmtblock

   84 forloop: FOR '(' expr1 ';' expr1 ';' expr1 ')' stmt
   85        | FOR '(' expr1 ';' expr1 ';' expr1 ')' stmtblock

   86 ifstmt: IF '(' expr ')' stmtblock elsestmt
   87       | IF '(' expr ')' stmt elsestmt

   88 elsestmt: ELSE stmtblock
   89         | ELSE stmt
   90         | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 36 77 79 81 82 83 84 85 86 87
')' (41) 36 77 79 81 82 83 84 85 86 87
',' (44) 65 67 69 71 74
';' (59) 10 11 12 13 14 15 16 84 85
'{' (123) 57
'}' (125) 57
error (256)
NUM (258) 38 62 69
STRING (259) 40 63 71
ID (260) 37 45 47 49 51 53 54 60 61 65 67 72 77 79 81
FOR (261) 84 85
WHILE (262) 82 83
IF (263) 86 87
ELSE (264) 88 89
INT (265) 3
CHAR (266) 4
VOID (267) 5
INCLUDE (268) 1 2
RETURN (269) 15 16
INC (270) 31 32
DEC (271) 33 34
PEQ (272) 49
MEQ (273) 47
DEQ (274) 53
MUEQ (275) 51
E (276) 45
OR (277) 17
AND (278) 18
BOR (279) 19
BAND (280) 20 61 67
EQ (281) 22
NE (282) 21
GE (283) 23
LE (284) 24
GT (285) 26
LT (286) 25
PLUS (287) 27
MINUS (288) 28 35
DIV (289) 30
MULT (290) 29


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
start (43)
    on left: 1 2, on right: 0 1
type (44)
    on left: 3 4 5, on right: 54 55 72 81
stmt (45)
    on left: 6 7 8 9 10 11 12 13 14 15 16, on right: 58 59 82 84 87
    89
expr (46)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39 40, on right: 14 16 17 18 19 20 21 22 23 24 25 26
    27 28 29 30 31 32 33 34 35 36 41 45 47 49 51 53 82 83 86 87
expr1 (47)
    on left: 41 42 43, on right: 84 85
assignment (48)
    on left: 45 47 49 51 53, on right: 11 42 55
$@1 (49)
    on left: 44, on right: 45
$@2 (50)
    on left: 46, on right: 47
$@3 (51)
    on left: 48, on right: 49
$@4 (52)
    on left: 50, on right: 51
$@5 (53)
    on left: 52, on right: 53
declaration (54)
    on left: 54 55, on right: 12
stmtblock (55)
    on left: 57, on right: 81 83 85 86 88
$@6 (56)
    on left: 56, on right: 57
stmtlist (57)
    on left: 58 59, on right: 2 57 58
arguement (58)
    on left: 60 61 62 63 65 67 69 71, on right: 65 67 69 71 79
$@7 (59)
    on left: 64, on right: 65
$@8 (60)
    on left: 66, on right: 67
$@9 (61)
    on left: 68, on right: 69
$@10 (62)
    on left: 70, on right: 71
parameter (63)
    on left: 72, on right: 74 75
paramlist (64)
    on left: 74 75 76, on right: 74 81
$@11 (65)
    on left: 73, on right: 74
funccall (66)
    on left: 77 79, on right: 10 39
$@12 (67)
    on left: 78, on right: 79
funcdef (68)
    on left: 81, on right: 9
$@13 (69)
    on left: 80, on right: 81
whileloop (70)
    on left: 82 83, on right: 6
forloop (71)
    on left: 84 85, on right: 7
ifstmt (72)
    on left: 86 87, on right: 8
elsestmt (73)
    on left: 88 89 90, on right: 86 87


State 0

    0 $accept: . start $end

    INCLUDE  shift, and go to state 1

    start  go to state 2


State 1

    1 start: INCLUDE . start
    2      | INCLUDE . stmtlist

    NUM      shift, and go to state 3
    STRING   shift, and go to state 4
    ID       shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IF       shift, and go to state 8
    INT      shift, and go to state 9
    CHAR     shift, and go to state 10
    VOID     shift, and go to state 11
    INCLUDE  shift, and go to state 1
    RETURN   shift, and go to state 12
    INC      shift, and go to state 13
    DEC      shift, and go to state 14
    MINUS    shift, and go to state 15
    ';'      shift, and go to state 16
    '('      shift, and go to state 17

    start        go to state 18
    type         go to state 19
    stmt         go to state 20
    expr         go to state 21
    assignment   go to state 22
    declaration  go to state 23
    stmtlist     go to state 24
    funccall     go to state 25
    funcdef      go to state 26
    whileloop    go to state 27
    forloop      go to state 28
    ifstmt       go to state 29


State 2

    0 $accept: start . $end

    $end  shift, and go to state 30


State 3

   38 expr: NUM .

    $default  reduce using rule 38 (expr)


State 4

   40 expr: STRING .

    $default  reduce using rule 40 (expr)


State 5

   37 expr: ID .
   45 assignment: ID . $@1 E expr
   47           | ID . $@2 MEQ expr
   49           | ID . $@3 PEQ expr
   51           | ID . $@4 MUEQ expr
   53           | ID . $@5 DEQ expr
   77 funccall: ID . '(' ')'
   79         | ID . $@12 '(' arguement ')'

    '('  shift, and go to state 31

    PEQ       reduce using rule 48 ($@3)
    MEQ       reduce using rule 46 ($@2)
    DEQ       reduce using rule 52 ($@5)
    MUEQ      reduce using rule 50 ($@4)
    E         reduce using rule 44 ($@1)
    '('       [reduce using rule 78 ($@12)]
    $default  reduce using rule 37 (expr)

    $@1   go to state 32
    $@2   go to state 33
    $@3   go to state 34
    $@4   go to state 35
    $@5   go to state 36
    $@12  go to state 37


State 6

   84 forloop: FOR . '(' expr1 ';' expr1 ';' expr1 ')' stmt
   85        | FOR . '(' expr1 ';' expr1 ';' expr1 ')' stmtblock

    '('  shift, and go to state 38


State 7

   82 whileloop: WHILE . '(' expr ')' stmt
   83          | WHILE . '(' expr ')' stmtblock

    '('  shift, and go to state 39


State 8

   86 ifstmt: IF . '(' expr ')' stmtblock elsestmt
   87       | IF . '(' expr ')' stmt elsestmt

    '('  shift, and go to state 40


State 9

    3 type: INT .

    $default  reduce using rule 3 (type)


State 10

    4 type: CHAR .

    $default  reduce using rule 4 (type)


State 11

    5 type: VOID .

    $default  reduce using rule 5 (type)


State 12

   15 stmt: RETURN . ';'
   16     | RETURN . expr ';'

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    ';'     shift, and go to state 42
    '('     shift, and go to state 17

    expr      go to state 43
    funccall  go to state 44


State 13

   31 expr: INC . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 45
    funccall  go to state 44


State 14

   33 expr: DEC . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 46
    funccall  go to state 44


State 15

   35 expr: MINUS . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 47
    funccall  go to state 44


State 16

   13 stmt: ';' .

    $default  reduce using rule 13 (stmt)


State 17

   36 expr: '(' . expr ')'

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 48
    funccall  go to state 44


State 18

    1 start: INCLUDE start .

    $default  reduce using rule 1 (start)


State 19

   54 declaration: type . ID
   55            | type . assignment
   81 funcdef: type . ID $@13 '(' paramlist ')' stmtblock

    ID  shift, and go to state 49

    assignment  go to state 50


State 20

   58 stmtlist: stmt . stmtlist
   59         | stmt .

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 5
    FOR     shift, and go to state 6
    WHILE   shift, and go to state 7
    IF      shift, and go to state 8
    INT     shift, and go to state 9
    CHAR    shift, and go to state 10
    VOID    shift, and go to state 11
    RETURN  shift, and go to state 12
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    ';'     shift, and go to state 16
    '('     shift, and go to state 17

    $default  reduce using rule 59 (stmtlist)

    type         go to state 19
    stmt         go to state 20
    expr         go to state 21
    assignment   go to state 22
    declaration  go to state 23
    stmtlist     go to state 51
    funccall     go to state 25
    funcdef      go to state 26
    whileloop    go to state 27
    forloop      go to state 28
    ifstmt       go to state 29


State 21

   14 stmt: expr . ';'
   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67
    ';'    shift, and go to state 68


State 22

   11 stmt: assignment . ';'

    ';'  shift, and go to state 69


State 23

   12 stmt: declaration . ';'

    ';'  shift, and go to state 70


State 24

    2 start: INCLUDE stmtlist .

    $default  reduce using rule 2 (start)


State 25

   10 stmt: funccall . ';'
   39 expr: funccall .

    ';'  shift, and go to state 71

    ';'       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 26

    9 stmt: funcdef .

    $default  reduce using rule 9 (stmt)


State 27

    6 stmt: whileloop .

    $default  reduce using rule 6 (stmt)


State 28

    7 stmt: forloop .

    $default  reduce using rule 7 (stmt)


State 29

    8 stmt: ifstmt .

    $default  reduce using rule 8 (stmt)


State 30

    0 $accept: start $end .

    $default  accept


State 31

   77 funccall: ID '(' . ')'

    ')'  shift, and go to state 72


State 32

   45 assignment: ID $@1 . E expr

    E  shift, and go to state 73


State 33

   47 assignment: ID $@2 . MEQ expr

    MEQ  shift, and go to state 74


State 34

   49 assignment: ID $@3 . PEQ expr

    PEQ  shift, and go to state 75


State 35

   51 assignment: ID $@4 . MUEQ expr

    MUEQ  shift, and go to state 76


State 36

   53 assignment: ID $@5 . DEQ expr

    DEQ  shift, and go to state 77


State 37

   79 funccall: ID $@12 . '(' arguement ')'

    '('  shift, and go to state 78


State 38

   84 forloop: FOR '(' . expr1 ';' expr1 ';' expr1 ')' stmt
   85        | FOR '(' . expr1 ';' expr1 ';' expr1 ')' stmtblock

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 5
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    $default  reduce using rule 43 (expr1)

    expr        go to state 79
    expr1       go to state 80
    assignment  go to state 81
    funccall    go to state 44


State 39

   82 whileloop: WHILE '(' . expr ')' stmt
   83          | WHILE '(' . expr ')' stmtblock

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 82
    funccall  go to state 44


State 40

   86 ifstmt: IF '(' . expr ')' stmtblock elsestmt
   87       | IF '(' . expr ')' stmt elsestmt

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 83
    funccall  go to state 44


State 41

   37 expr: ID .
   77 funccall: ID . '(' ')'
   79         | ID . $@12 '(' arguement ')'

    '('  shift, and go to state 31

    '('       [reduce using rule 78 ($@12)]
    $default  reduce using rule 37 (expr)

    $@12  go to state 37


State 42

   15 stmt: RETURN ';' .

    $default  reduce using rule 15 (stmt)


State 43

   16 stmt: RETURN expr . ';'
   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67
    ';'    shift, and go to state 84


State 44

   39 expr: funccall .

    $default  reduce using rule 39 (expr)


State 45

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   31     | INC expr .
   32     | expr . INC
   34     | expr . DEC

    $default  reduce using rule 31 (expr)


State 46

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   33     | DEC expr .
   34     | expr . DEC

    $default  reduce using rule 33 (expr)


State 47

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC
   35     | MINUS expr .

    INC   shift, and go to state 52
    DEC   shift, and go to state 53
    DIV   shift, and go to state 66
    MULT  shift, and go to state 67

    $default  reduce using rule 35 (expr)


State 48

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC
   36     | '(' expr . ')'

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67
    ')'    shift, and go to state 85


State 49

   45 assignment: ID . $@1 E expr
   47           | ID . $@2 MEQ expr
   49           | ID . $@3 PEQ expr
   51           | ID . $@4 MUEQ expr
   53           | ID . $@5 DEQ expr
   54 declaration: type ID .
   81 funcdef: type ID . $@13 '(' paramlist ')' stmtblock

    PEQ       reduce using rule 48 ($@3)
    MEQ       reduce using rule 46 ($@2)
    DEQ       reduce using rule 52 ($@5)
    MUEQ      reduce using rule 50 ($@4)
    ';'       reduce using rule 54 (declaration)
    '('       reduce using rule 80 ($@13)
    $default  reduce using rule 44 ($@1)

    $@1   go to state 32
    $@2   go to state 33
    $@3   go to state 34
    $@4   go to state 35
    $@5   go to state 36
    $@13  go to state 86


State 50

   55 declaration: type assignment .

    $default  reduce using rule 55 (declaration)


State 51

   58 stmtlist: stmt stmtlist .

    $default  reduce using rule 58 (stmtlist)


State 52

   32 expr: expr INC .

    $default  reduce using rule 32 (expr)


State 53

   34 expr: expr DEC .

    $default  reduce using rule 34 (expr)


State 54

   17 expr: expr OR . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 87
    funccall  go to state 44


State 55

   18 expr: expr AND . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 88
    funccall  go to state 44


State 56

   19 expr: expr BOR . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 89
    funccall  go to state 44


State 57

   20 expr: expr BAND . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 90
    funccall  go to state 44


State 58

   22 expr: expr EQ . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 91
    funccall  go to state 44


State 59

   21 expr: expr NE . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 92
    funccall  go to state 44


State 60

   23 expr: expr GE . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 93
    funccall  go to state 44


State 61

   24 expr: expr LE . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 94
    funccall  go to state 44


State 62

   26 expr: expr GT . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 95
    funccall  go to state 44


State 63

   25 expr: expr LT . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 96
    funccall  go to state 44


State 64

   27 expr: expr PLUS . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 97
    funccall  go to state 44


State 65

   28 expr: expr MINUS . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 98
    funccall  go to state 44


State 66

   30 expr: expr DIV . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 99
    funccall  go to state 44


State 67

   29 expr: expr MULT . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 100
    funccall  go to state 44


State 68

   14 stmt: expr ';' .

    $default  reduce using rule 14 (stmt)


State 69

   11 stmt: assignment ';' .

    $default  reduce using rule 11 (stmt)


State 70

   12 stmt: declaration ';' .

    $default  reduce using rule 12 (stmt)


State 71

   10 stmt: funccall ';' .

    $default  reduce using rule 10 (stmt)


State 72

   77 funccall: ID '(' ')' .

    $default  reduce using rule 77 (funccall)


State 73

   45 assignment: ID $@1 E . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 101
    funccall  go to state 44


State 74

   47 assignment: ID $@2 MEQ . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 102
    funccall  go to state 44


State 75

   49 assignment: ID $@3 PEQ . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 103
    funccall  go to state 44


State 76

   51 assignment: ID $@4 MUEQ . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 104
    funccall  go to state 44


State 77

   53 assignment: ID $@5 DEQ . expr

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 41
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    expr      go to state 105
    funccall  go to state 44


State 78

   79 funccall: ID $@12 '(' . arguement ')'

    NUM     shift, and go to state 106
    STRING  shift, and go to state 107
    ID      shift, and go to state 108
    BAND    shift, and go to state 109

    arguement  go to state 110


State 79

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC
   41 expr1: expr .

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 41 (expr1)


State 80

   84 forloop: FOR '(' expr1 . ';' expr1 ';' expr1 ')' stmt
   85        | FOR '(' expr1 . ';' expr1 ';' expr1 ')' stmtblock

    ';'  shift, and go to state 111


State 81

   42 expr1: assignment .

    $default  reduce using rule 42 (expr1)


State 82

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC
   82 whileloop: WHILE '(' expr . ')' stmt
   83          | WHILE '(' expr . ')' stmtblock

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67
    ')'    shift, and go to state 112


State 83

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC
   86 ifstmt: IF '(' expr . ')' stmtblock elsestmt
   87       | IF '(' expr . ')' stmt elsestmt

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67
    ')'    shift, and go to state 113


State 84

   16 stmt: RETURN expr ';' .

    $default  reduce using rule 16 (stmt)


State 85

   36 expr: '(' expr ')' .

    $default  reduce using rule 36 (expr)


State 86

   81 funcdef: type ID $@13 . '(' paramlist ')' stmtblock

    '('  shift, and go to state 114


State 87

   17 expr: expr . OR expr
   17     | expr OR expr .
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 17 (expr)


State 88

   17 expr: expr . OR expr
   18     | expr . AND expr
   18     | expr AND expr .
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 18 (expr)


State 89

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   19     | expr BOR expr .
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 19 (expr)


State 90

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   20     | expr BAND expr .
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 20 (expr)


State 91

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   22     | expr EQ expr .
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 22 (expr)


State 92

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   21     | expr NE expr .
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 21 (expr)


State 93

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   23     | expr GE expr .
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 23 (expr)


State 94

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   24     | expr LE expr .
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 24 (expr)


State 95

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   26     | expr GT expr .
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 26 (expr)


State 96

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   25     | expr LT expr .
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 25 (expr)


State 97

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   27     | expr PLUS expr .
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC   shift, and go to state 52
    DEC   shift, and go to state 53
    DIV   shift, and go to state 66
    MULT  shift, and go to state 67

    $default  reduce using rule 27 (expr)


State 98

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   28     | expr MINUS expr .
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC   shift, and go to state 52
    DEC   shift, and go to state 53
    DIV   shift, and go to state 66
    MULT  shift, and go to state 67

    $default  reduce using rule 28 (expr)


State 99

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   30     | expr DIV expr .
   32     | expr . INC
   34     | expr . DEC

    INC  shift, and go to state 52
    DEC  shift, and go to state 53

    $default  reduce using rule 30 (expr)


State 100

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   29     | expr MULT expr .
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC

    INC  shift, and go to state 52
    DEC  shift, and go to state 53

    $default  reduce using rule 29 (expr)


State 101

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC
   45 assignment: ID $@1 E expr .

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 45 (assignment)


State 102

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC
   47 assignment: ID $@2 MEQ expr .

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 47 (assignment)


State 103

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC
   49 assignment: ID $@3 PEQ expr .

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 49 (assignment)


State 104

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC
   51 assignment: ID $@4 MUEQ expr .

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 51 (assignment)


State 105

   17 expr: expr . OR expr
   18     | expr . AND expr
   19     | expr . BOR expr
   20     | expr . BAND expr
   21     | expr . NE expr
   22     | expr . EQ expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . LT expr
   26     | expr . GT expr
   27     | expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . MULT expr
   30     | expr . DIV expr
   32     | expr . INC
   34     | expr . DEC
   53 assignment: ID $@5 DEQ expr .

    INC    shift, and go to state 52
    DEC    shift, and go to state 53
    OR     shift, and go to state 54
    AND    shift, and go to state 55
    BOR    shift, and go to state 56
    BAND   shift, and go to state 57
    EQ     shift, and go to state 58
    NE     shift, and go to state 59
    GE     shift, and go to state 60
    LE     shift, and go to state 61
    GT     shift, and go to state 62
    LT     shift, and go to state 63
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    DIV    shift, and go to state 66
    MULT   shift, and go to state 67

    $default  reduce using rule 53 (assignment)


State 106

   62 arguement: NUM .
   69          | NUM . $@9 ',' arguement

    ','       reduce using rule 68 ($@9)
    $default  reduce using rule 62 (arguement)

    $@9  go to state 115


State 107

   63 arguement: STRING .
   71          | STRING . $@10 ',' arguement

    ','       reduce using rule 70 ($@10)
    $default  reduce using rule 63 (arguement)

    $@10  go to state 116


State 108

   60 arguement: ID .
   65          | ID . $@7 ',' arguement

    ','       reduce using rule 64 ($@7)
    $default  reduce using rule 60 (arguement)

    $@7  go to state 117


State 109

   61 arguement: BAND . ID
   67          | BAND . ID $@8 ',' arguement

    ID  shift, and go to state 118


State 110

   79 funccall: ID $@12 '(' arguement . ')'

    ')'  shift, and go to state 119


State 111

   84 forloop: FOR '(' expr1 ';' . expr1 ';' expr1 ')' stmt
   85        | FOR '(' expr1 ';' . expr1 ';' expr1 ')' stmtblock

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 5
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    $default  reduce using rule 43 (expr1)

    expr        go to state 79
    expr1       go to state 120
    assignment  go to state 81
    funccall    go to state 44


State 112

   82 whileloop: WHILE '(' expr ')' . stmt
   83          | WHILE '(' expr ')' . stmtblock

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 5
    FOR     shift, and go to state 6
    WHILE   shift, and go to state 7
    IF      shift, and go to state 8
    INT     shift, and go to state 9
    CHAR    shift, and go to state 10
    VOID    shift, and go to state 11
    RETURN  shift, and go to state 12
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    ';'     shift, and go to state 16
    '('     shift, and go to state 17
    '{'     shift, and go to state 121

    type         go to state 19
    stmt         go to state 122
    expr         go to state 21
    assignment   go to state 22
    declaration  go to state 23
    stmtblock    go to state 123
    funccall     go to state 25
    funcdef      go to state 26
    whileloop    go to state 27
    forloop      go to state 28
    ifstmt       go to state 29


State 113

   86 ifstmt: IF '(' expr ')' . stmtblock elsestmt
   87       | IF '(' expr ')' . stmt elsestmt

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 5
    FOR     shift, and go to state 6
    WHILE   shift, and go to state 7
    IF      shift, and go to state 8
    INT     shift, and go to state 9
    CHAR    shift, and go to state 10
    VOID    shift, and go to state 11
    RETURN  shift, and go to state 12
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    ';'     shift, and go to state 16
    '('     shift, and go to state 17
    '{'     shift, and go to state 121

    type         go to state 19
    stmt         go to state 124
    expr         go to state 21
    assignment   go to state 22
    declaration  go to state 23
    stmtblock    go to state 125
    funccall     go to state 25
    funcdef      go to state 26
    whileloop    go to state 27
    forloop      go to state 28
    ifstmt       go to state 29


State 114

   81 funcdef: type ID $@13 '(' . paramlist ')' stmtblock

    INT   shift, and go to state 9
    CHAR  shift, and go to state 10
    VOID  shift, and go to state 11

    $default  reduce using rule 76 (paramlist)

    type       go to state 126
    parameter  go to state 127
    paramlist  go to state 128


State 115

   69 arguement: NUM $@9 . ',' arguement

    ','  shift, and go to state 129


State 116

   71 arguement: STRING $@10 . ',' arguement

    ','  shift, and go to state 130


State 117

   65 arguement: ID $@7 . ',' arguement

    ','  shift, and go to state 131


State 118

   61 arguement: BAND ID .
   67          | BAND ID . $@8 ',' arguement

    ','       reduce using rule 66 ($@8)
    $default  reduce using rule 61 (arguement)

    $@8  go to state 132


State 119

   79 funccall: ID $@12 '(' arguement ')' .

    $default  reduce using rule 79 (funccall)


State 120

   84 forloop: FOR '(' expr1 ';' expr1 . ';' expr1 ')' stmt
   85        | FOR '(' expr1 ';' expr1 . ';' expr1 ')' stmtblock

    ';'  shift, and go to state 133


State 121

   57 stmtblock: '{' . $@6 stmtlist '}'

    $default  reduce using rule 56 ($@6)

    $@6  go to state 134


State 122

   82 whileloop: WHILE '(' expr ')' stmt .

    $default  reduce using rule 82 (whileloop)


State 123

   83 whileloop: WHILE '(' expr ')' stmtblock .

    $default  reduce using rule 83 (whileloop)


State 124

   87 ifstmt: IF '(' expr ')' stmt . elsestmt

    ELSE  shift, and go to state 135

    ELSE      [reduce using rule 90 (elsestmt)]
    $default  reduce using rule 90 (elsestmt)

    elsestmt  go to state 136


State 125

   86 ifstmt: IF '(' expr ')' stmtblock . elsestmt

    ELSE  shift, and go to state 135

    ELSE      [reduce using rule 90 (elsestmt)]
    $default  reduce using rule 90 (elsestmt)

    elsestmt  go to state 137


State 126

   72 parameter: type . ID

    ID  shift, and go to state 138


State 127

   74 paramlist: parameter . $@11 ',' paramlist
   75          | parameter .

    ')'       reduce using rule 75 (paramlist)
    $default  reduce using rule 73 ($@11)

    $@11  go to state 139


State 128

   81 funcdef: type ID $@13 '(' paramlist . ')' stmtblock

    ')'  shift, and go to state 140


State 129

   69 arguement: NUM $@9 ',' . arguement

    NUM     shift, and go to state 106
    STRING  shift, and go to state 107
    ID      shift, and go to state 108
    BAND    shift, and go to state 109

    arguement  go to state 141


State 130

   71 arguement: STRING $@10 ',' . arguement

    NUM     shift, and go to state 106
    STRING  shift, and go to state 107
    ID      shift, and go to state 108
    BAND    shift, and go to state 109

    arguement  go to state 142


State 131

   65 arguement: ID $@7 ',' . arguement

    NUM     shift, and go to state 106
    STRING  shift, and go to state 107
    ID      shift, and go to state 108
    BAND    shift, and go to state 109

    arguement  go to state 143


State 132

   67 arguement: BAND ID $@8 . ',' arguement

    ','  shift, and go to state 144


State 133

   84 forloop: FOR '(' expr1 ';' expr1 ';' . expr1 ')' stmt
   85        | FOR '(' expr1 ';' expr1 ';' . expr1 ')' stmtblock

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 5
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    '('     shift, and go to state 17

    $default  reduce using rule 43 (expr1)

    expr        go to state 79
    expr1       go to state 145
    assignment  go to state 81
    funccall    go to state 44


State 134

   57 stmtblock: '{' $@6 . stmtlist '}'

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 5
    FOR     shift, and go to state 6
    WHILE   shift, and go to state 7
    IF      shift, and go to state 8
    INT     shift, and go to state 9
    CHAR    shift, and go to state 10
    VOID    shift, and go to state 11
    RETURN  shift, and go to state 12
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    ';'     shift, and go to state 16
    '('     shift, and go to state 17

    type         go to state 19
    stmt         go to state 20
    expr         go to state 21
    assignment   go to state 22
    declaration  go to state 23
    stmtlist     go to state 146
    funccall     go to state 25
    funcdef      go to state 26
    whileloop    go to state 27
    forloop      go to state 28
    ifstmt       go to state 29


State 135

   88 elsestmt: ELSE . stmtblock
   89         | ELSE . stmt

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 5
    FOR     shift, and go to state 6
    WHILE   shift, and go to state 7
    IF      shift, and go to state 8
    INT     shift, and go to state 9
    CHAR    shift, and go to state 10
    VOID    shift, and go to state 11
    RETURN  shift, and go to state 12
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    ';'     shift, and go to state 16
    '('     shift, and go to state 17
    '{'     shift, and go to state 121

    type         go to state 19
    stmt         go to state 147
    expr         go to state 21
    assignment   go to state 22
    declaration  go to state 23
    stmtblock    go to state 148
    funccall     go to state 25
    funcdef      go to state 26
    whileloop    go to state 27
    forloop      go to state 28
    ifstmt       go to state 29


State 136

   87 ifstmt: IF '(' expr ')' stmt elsestmt .

    $default  reduce using rule 87 (ifstmt)


State 137

   86 ifstmt: IF '(' expr ')' stmtblock elsestmt .

    $default  reduce using rule 86 (ifstmt)


State 138

   72 parameter: type ID .

    $default  reduce using rule 72 (parameter)


State 139

   74 paramlist: parameter $@11 . ',' paramlist

    ','  shift, and go to state 149


State 140

   81 funcdef: type ID $@13 '(' paramlist ')' . stmtblock

    '{'  shift, and go to state 121

    stmtblock  go to state 150


State 141

   69 arguement: NUM $@9 ',' arguement .

    $default  reduce using rule 69 (arguement)


State 142

   71 arguement: STRING $@10 ',' arguement .

    $default  reduce using rule 71 (arguement)


State 143

   65 arguement: ID $@7 ',' arguement .

    $default  reduce using rule 65 (arguement)


State 144

   67 arguement: BAND ID $@8 ',' . arguement

    NUM     shift, and go to state 106
    STRING  shift, and go to state 107
    ID      shift, and go to state 108
    BAND    shift, and go to state 109

    arguement  go to state 151


State 145

   84 forloop: FOR '(' expr1 ';' expr1 ';' expr1 . ')' stmt
   85        | FOR '(' expr1 ';' expr1 ';' expr1 . ')' stmtblock

    ')'  shift, and go to state 152


State 146

   57 stmtblock: '{' $@6 stmtlist . '}'

    '}'  shift, and go to state 153


State 147

   89 elsestmt: ELSE stmt .

    $default  reduce using rule 89 (elsestmt)


State 148

   88 elsestmt: ELSE stmtblock .

    $default  reduce using rule 88 (elsestmt)


State 149

   74 paramlist: parameter $@11 ',' . paramlist

    INT   shift, and go to state 9
    CHAR  shift, and go to state 10
    VOID  shift, and go to state 11

    $default  reduce using rule 76 (paramlist)

    type       go to state 126
    parameter  go to state 127
    paramlist  go to state 154


State 150

   81 funcdef: type ID $@13 '(' paramlist ')' stmtblock .

    $default  reduce using rule 81 (funcdef)


State 151

   67 arguement: BAND ID $@8 ',' arguement .

    $default  reduce using rule 67 (arguement)


State 152

   84 forloop: FOR '(' expr1 ';' expr1 ';' expr1 ')' . stmt
   85        | FOR '(' expr1 ';' expr1 ';' expr1 ')' . stmtblock

    NUM     shift, and go to state 3
    STRING  shift, and go to state 4
    ID      shift, and go to state 5
    FOR     shift, and go to state 6
    WHILE   shift, and go to state 7
    IF      shift, and go to state 8
    INT     shift, and go to state 9
    CHAR    shift, and go to state 10
    VOID    shift, and go to state 11
    RETURN  shift, and go to state 12
    INC     shift, and go to state 13
    DEC     shift, and go to state 14
    MINUS   shift, and go to state 15
    ';'     shift, and go to state 16
    '('     shift, and go to state 17
    '{'     shift, and go to state 121

    type         go to state 19
    stmt         go to state 155
    expr         go to state 21
    assignment   go to state 22
    declaration  go to state 23
    stmtblock    go to state 156
    funccall     go to state 25
    funcdef      go to state 26
    whileloop    go to state 27
    forloop      go to state 28
    ifstmt       go to state 29


State 153

   57 stmtblock: '{' $@6 stmtlist '}' .

    $default  reduce using rule 57 (stmtblock)


State 154

   74 paramlist: parameter $@11 ',' paramlist .

    $default  reduce using rule 74 (paramlist)


State 155

   84 forloop: FOR '(' expr1 ';' expr1 ';' expr1 ')' stmt .

    $default  reduce using rule 84 (forloop)


State 156

   85 forloop: FOR '(' expr1 ';' expr1 ';' expr1 ')' stmtblock .

    $default  reduce using rule 85 (forloop)
